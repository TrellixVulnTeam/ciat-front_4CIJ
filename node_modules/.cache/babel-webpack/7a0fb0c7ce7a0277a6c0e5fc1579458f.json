{"ast":null,"code":"import axios from 'axios';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/database\";\nimport * as i2 from \"../auth/auth.service\";\nconst api = axios.create({\n  baseURL: 'http://ec2-44-203-78-238.compute-1.amazonaws.com:8080/'\n});\nexport let FirestoreService = /*#__PURE__*/(() => {\n  class FirestoreService {\n    constructor(firestore, authService) {\n      this.firestore = firestore;\n      this.authService = authService;\n    }\n\n    Loguin(payload) {\n      return api.post(`api/auth/signin`, payload);\n    }\n\n    singup(payload) {\n      console.log(payload);\n      return api.post(`api/auth/signup`, payload);\n    }\n\n    getZonas(headerGroup) {\n      return api.get(`api/zona`, {\n        headers: headerGroup\n      });\n    }\n\n    postZona(payload, headerGroup) {\n      return api.post(`api/zona`, payload, {\n        headers: headerGroup\n      });\n    }\n\n    getZonaId(id, headerGroup) {\n      return api.get(`api/zona/` + id, {\n        headers: headerGroup\n      });\n    }\n\n    postPlaga(payload, headerGroup) {\n      return api.post(`api/plaga`, payload, {\n        headers: headerGroup\n      });\n    }\n\n    getPlaga(headerGroup) {\n      return api.get(`api/plaga`, {\n        headers: headerGroup\n      });\n    }\n\n    getPlagaId(id, headerGroup) {\n      return api.get(`api/plaga/` + id, {\n        headers: headerGroup\n      });\n    }\n\n  }\n\n  FirestoreService.ɵfac = function FirestoreService_Factory(t) {\n    return new (t || FirestoreService)(i0.ɵɵinject(i1.AngularFireDatabase), i0.ɵɵinject(i2.AuthService));\n  };\n\n  FirestoreService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FirestoreService,\n    factory: FirestoreService.ɵfac,\n    providedIn: 'root'\n  });\n  return FirestoreService;\n})();","map":null,"metadata":{},"sourceType":"module"}