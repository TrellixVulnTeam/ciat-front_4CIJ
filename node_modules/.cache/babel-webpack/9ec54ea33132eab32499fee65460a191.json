{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/fire/auth\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(authSvc, router, AFauth) {\n      this.authSvc = authSvc;\n      this.router = router;\n      this.AFauth = AFauth;\n    }\n\n    canActivate(next, state) {\n      return this.AFauth.authState.pipe(map(auth => {\n        //Desición para permitir acceso a los Tabs\n        if (!auth) {\n          this.router.navigateByUrl('/login');\n          return false;\n        } else {\n          return true;\n        }\n      }));\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.AngularFireAuth));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}