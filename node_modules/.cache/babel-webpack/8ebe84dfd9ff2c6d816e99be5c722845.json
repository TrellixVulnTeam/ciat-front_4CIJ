{"ast":null,"code":"import _asyncToGenerator from \"/home/cristian/Documentos/repositorios/ecomerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/auth\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(afAuth) {\n      this.afAuth = afAuth;\n    } //Mertodo para loguearse en la autentificación de Firebase\n\n\n    onLogin(user) {\n      return this.afAuth.auth.signInWithEmailAndPassword(user.email, user.password).then(user => Promise.resolve(user)) //Mensaje de error si el usuario no se a registrado o la contraseña falla\n      .catch(err => Promise.reject(err));\n    } // Mertodo para Registrarse en la autentificación de Firebase\n\n\n    onRegister(user) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        return _this.afAuth.auth.createUserWithEmailAndPassword(user.email, user.password).then(res => {\n          _this.afAuth.auth.signInWithEmailAndPassword(user.email, user.password);\n        }).then(user => Promise.resolve(user)).catch(err => Promise.reject(err));\n      })();\n    } // Devuelve la session\n\n\n    get Session() {\n      return this.afAuth.authState;\n    } // Logout de usuario o salir de la sección\n\n\n    logout() {\n      this.afAuth.auth.signOut().then();\n    } // Obtenemos el id de usuario.\n\n\n    getUser() {\n      var _a;\n\n      return (_a = this.afAuth.auth.currentUser) === null || _a === void 0 ? void 0 : _a.uid;\n    } //Metodo para restablecer contraseña\n\n\n    resetPassword(email) {\n      return this.afAuth.auth.sendPasswordResetEmail(email);\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireAuth));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}