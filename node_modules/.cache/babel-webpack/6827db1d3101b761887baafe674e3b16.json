{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Optional, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@angular/forms';\n\nclass InputTextarea {\n  constructor(el, ngModel, control, cd) {\n    this.el = el;\n    this.ngModel = ngModel;\n    this.control = control;\n    this.cd = cd;\n    this.onResize = new EventEmitter();\n  }\n\n  ngOnInit() {\n    if (this.ngModel) {\n      this.ngModelSubscription = this.ngModel.valueChanges.subscribe(() => {\n        this.updateState();\n      });\n    }\n\n    if (this.control) {\n      this.ngControlSubscription = this.control.valueChanges.subscribe(() => {\n        this.updateState();\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.autoResize) this.resize();\n    this.updateFilledState();\n    this.cd.detectChanges();\n  }\n\n  onInput(e) {\n    this.updateState();\n  }\n\n  updateFilledState() {\n    this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\n  }\n\n  onFocus(e) {\n    if (this.autoResize) {\n      this.resize(e);\n    }\n  }\n\n  onBlur(e) {\n    if (this.autoResize) {\n      this.resize(e);\n    }\n  }\n\n  resize(event) {\n    this.el.nativeElement.style.height = 'auto';\n    this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n\n    if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n      this.el.nativeElement.style.overflowY = \"scroll\";\n      this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n    } else {\n      this.el.nativeElement.style.overflow = \"hidden\";\n    }\n\n    this.onResize.emit(event || {});\n  }\n\n  updateState() {\n    this.updateFilledState();\n\n    if (this.autoResize) {\n      this.resize();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.ngModelSubscription) {\n      this.ngModelSubscription.unsubscribe();\n    }\n\n    if (this.ngControlSubscription) {\n      this.ngControlSubscription.unsubscribe();\n    }\n  }\n\n}\n\nInputTextarea.ɵfac = function InputTextarea_Factory(t) {\n  return new (t || InputTextarea)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.NgModel, 8), i0.ɵɵdirectiveInject(i1.NgControl, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nInputTextarea.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: InputTextarea,\n  selectors: [[\"\", \"pInputTextarea\", \"\"]],\n  hostAttrs: [1, \"p-inputtextarea\", \"p-inputtext\", \"p-component\", \"p-element\"],\n  hostVars: 4,\n  hostBindings: function InputTextarea_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"input\", function InputTextarea_input_HostBindingHandler($event) {\n        return ctx.onInput($event);\n      })(\"focus\", function InputTextarea_focus_HostBindingHandler($event) {\n        return ctx.onFocus($event);\n      })(\"blur\", function InputTextarea_blur_HostBindingHandler($event) {\n        return ctx.onBlur($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-filled\", ctx.filled)(\"p-inputtextarea-resizable\", ctx.autoResize);\n    }\n  },\n  inputs: {\n    autoResize: \"autoResize\"\n  },\n  outputs: {\n    onResize: \"onResize\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputTextarea, [{\n    type: Directive,\n    args: [{\n      selector: '[pInputTextarea]',\n      host: {\n        'class': 'p-inputtextarea p-inputtext p-component p-element',\n        '[class.p-filled]': 'filled',\n        '[class.p-inputtextarea-resizable]': 'autoResize'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.NgModel,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i1.NgControl,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    autoResize: [{\n      type: Input\n    }],\n    onResize: [{\n      type: Output\n    }],\n    onInput: [{\n      type: HostListener,\n      args: ['input', ['$event']]\n    }],\n    onFocus: [{\n      type: HostListener,\n      args: ['focus', ['$event']]\n    }],\n    onBlur: [{\n      type: HostListener,\n      args: ['blur', ['$event']]\n    }]\n  });\n})();\n\nclass InputTextareaModule {}\n\nInputTextareaModule.ɵfac = function InputTextareaModule_Factory(t) {\n  return new (t || InputTextareaModule)();\n};\n\nInputTextareaModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: InputTextareaModule\n});\nInputTextareaModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputTextareaModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [InputTextarea],\n      declarations: [InputTextarea]\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { InputTextarea, InputTextareaModule };","map":{"version":3,"sources":["C:/Users/cristian/OneDrive/Documentos/bitbucket/puntocomercios/node_modules/primeng/fesm2015/primeng-inputtextarea.mjs"],"names":["i0","EventEmitter","Directive","Optional","Input","Output","HostListener","NgModule","CommonModule","i1","InputTextarea","constructor","el","ngModel","control","cd","onResize","ngOnInit","ngModelSubscription","valueChanges","subscribe","updateState","ngControlSubscription","ngAfterViewInit","autoResize","resize","updateFilledState","detectChanges","onInput","e","filled","nativeElement","value","length","onFocus","onBlur","event","style","height","scrollHeight","parseFloat","maxHeight","overflowY","overflow","emit","ngOnDestroy","unsubscribe","ɵfac","ElementRef","NgModel","NgControl","ChangeDetectorRef","ɵdir","type","args","selector","host","decorators","InputTextareaModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,QAAlC,EAA4CC,KAA5C,EAAmDC,MAAnD,EAA2DC,YAA3D,EAAyEC,QAAzE,QAAyF,eAAzF;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,KAAKC,EAAZ,MAAoB,gBAApB;;AAEA,MAAMC,aAAN,CAAoB;AAChBC,EAAAA,WAAW,CAACC,EAAD,EAAKC,OAAL,EAAcC,OAAd,EAAuBC,EAAvB,EAA2B;AAClC,SAAKH,EAAL,GAAUA,EAAV;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,EAAL,GAAUA,EAAV;AACA,SAAKC,QAAL,GAAgB,IAAIf,YAAJ,EAAhB;AACH;;AACDgB,EAAAA,QAAQ,GAAG;AACP,QAAI,KAAKJ,OAAT,EAAkB;AACd,WAAKK,mBAAL,GAA2B,KAAKL,OAAL,CAAaM,YAAb,CAA0BC,SAA1B,CAAoC,MAAM;AACjE,aAAKC,WAAL;AACH,OAF0B,CAA3B;AAGH;;AACD,QAAI,KAAKP,OAAT,EAAkB;AACd,WAAKQ,qBAAL,GAA6B,KAAKR,OAAL,CAAaK,YAAb,CAA0BC,SAA1B,CAAoC,MAAM;AACnE,aAAKC,WAAL;AACH,OAF4B,CAA7B;AAGH;AACJ;;AACDE,EAAAA,eAAe,GAAG;AACd,QAAI,KAAKC,UAAT,EACI,KAAKC,MAAL;AACJ,SAAKC,iBAAL;AACA,SAAKX,EAAL,CAAQY,aAAR;AACH;;AACDC,EAAAA,OAAO,CAACC,CAAD,EAAI;AACP,SAAKR,WAAL;AACH;;AACDK,EAAAA,iBAAiB,GAAG;AAChB,SAAKI,MAAL,GAAc,KAAKlB,EAAL,CAAQmB,aAAR,CAAsBC,KAAtB,IAA+B,KAAKpB,EAAL,CAAQmB,aAAR,CAAsBC,KAAtB,CAA4BC,MAAzE;AACH;;AACDC,EAAAA,OAAO,CAACL,CAAD,EAAI;AACP,QAAI,KAAKL,UAAT,EAAqB;AACjB,WAAKC,MAAL,CAAYI,CAAZ;AACH;AACJ;;AACDM,EAAAA,MAAM,CAACN,CAAD,EAAI;AACN,QAAI,KAAKL,UAAT,EAAqB;AACjB,WAAKC,MAAL,CAAYI,CAAZ;AACH;AACJ;;AACDJ,EAAAA,MAAM,CAACW,KAAD,EAAQ;AACV,SAAKxB,EAAL,CAAQmB,aAAR,CAAsBM,KAAtB,CAA4BC,MAA5B,GAAqC,MAArC;AACA,SAAK1B,EAAL,CAAQmB,aAAR,CAAsBM,KAAtB,CAA4BC,MAA5B,GAAqC,KAAK1B,EAAL,CAAQmB,aAAR,CAAsBQ,YAAtB,GAAqC,IAA1E;;AACA,QAAIC,UAAU,CAAC,KAAK5B,EAAL,CAAQmB,aAAR,CAAsBM,KAAtB,CAA4BC,MAA7B,CAAV,IAAkDE,UAAU,CAAC,KAAK5B,EAAL,CAAQmB,aAAR,CAAsBM,KAAtB,CAA4BI,SAA7B,CAAhE,EAAyG;AACrG,WAAK7B,EAAL,CAAQmB,aAAR,CAAsBM,KAAtB,CAA4BK,SAA5B,GAAwC,QAAxC;AACA,WAAK9B,EAAL,CAAQmB,aAAR,CAAsBM,KAAtB,CAA4BC,MAA5B,GAAqC,KAAK1B,EAAL,CAAQmB,aAAR,CAAsBM,KAAtB,CAA4BI,SAAjE;AACH,KAHD,MAIK;AACD,WAAK7B,EAAL,CAAQmB,aAAR,CAAsBM,KAAtB,CAA4BM,QAA5B,GAAuC,QAAvC;AACH;;AACD,SAAK3B,QAAL,CAAc4B,IAAd,CAAmBR,KAAK,IAAI,EAA5B;AACH;;AACDf,EAAAA,WAAW,GAAG;AACV,SAAKK,iBAAL;;AACA,QAAI,KAAKF,UAAT,EAAqB;AACjB,WAAKC,MAAL;AACH;AACJ;;AACDoB,EAAAA,WAAW,GAAG;AACV,QAAI,KAAK3B,mBAAT,EAA8B;AAC1B,WAAKA,mBAAL,CAAyB4B,WAAzB;AACH;;AACD,QAAI,KAAKxB,qBAAT,EAAgC;AAC5B,WAAKA,qBAAL,CAA2BwB,WAA3B;AACH;AACJ;;AAnEe;;AAqEpBpC,aAAa,CAACqC,IAAd;AAAA,mBAA0GrC,aAA1G,EAAgGV,EAAhG,mBAAyIA,EAAE,CAACgD,UAA5I,GAAgGhD,EAAhG,mBAAmKS,EAAE,CAACwC,OAAtK,MAAgGjD,EAAhG,mBAA0MS,EAAE,CAACyC,SAA7M,MAAgGlD,EAAhG,mBAAmPA,EAAE,CAACmD,iBAAtP;AAAA;;AACAzC,aAAa,CAAC0C,IAAd,kBADgGpD,EAChG;AAAA,QAA8FU,aAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AADgGV,MAAAA,EAChG;AAAA,eAA8F,mBAA9F;AAAA;AAAA,eAA8F,mBAA9F;AAAA;AAAA,eAA8F,kBAA9F;AAAA;AAAA;;AAAA;AADgGA,MAAAA,EAChG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA,qDAFgGA,EAEhG,mBAA2FU,aAA3F,EAAsH,CAAC;AAC3G2C,IAAAA,IAAI,EAAEnD,SADqG;AAE3GoD,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,QAAQ,EAAE,kBADX;AAECC,MAAAA,IAAI,EAAE;AACF,iBAAS,mDADP;AAEF,4BAAoB,QAFlB;AAGF,6CAAqC;AAHnC;AAFP,KAAD;AAFqG,GAAD,CAAtH,EAU4B,YAAY;AAChC,WAAO,CAAC;AAAEH,MAAAA,IAAI,EAAErD,EAAE,CAACgD;AAAX,KAAD,EAA0B;AAAEK,MAAAA,IAAI,EAAE5C,EAAE,CAACwC,OAAX;AAAoBQ,MAAAA,UAAU,EAAE,CAAC;AAClDJ,QAAAA,IAAI,EAAElD;AAD4C,OAAD;AAAhC,KAA1B,EAEW;AAAEkD,MAAAA,IAAI,EAAE5C,EAAE,CAACyC,SAAX;AAAsBO,MAAAA,UAAU,EAAE,CAAC;AACrCJ,QAAAA,IAAI,EAAElD;AAD+B,OAAD;AAAlC,KAFX,EAIW;AAAEkD,MAAAA,IAAI,EAAErD,EAAE,CAACmD;AAAX,KAJX,CAAP;AAKH,GAhBL,EAgBuB;AAAE3B,IAAAA,UAAU,EAAE,CAAC;AACtB6B,MAAAA,IAAI,EAAEjD;AADgB,KAAD,CAAd;AAEPY,IAAAA,QAAQ,EAAE,CAAC;AACXqC,MAAAA,IAAI,EAAEhD;AADK,KAAD,CAFH;AAIPuB,IAAAA,OAAO,EAAE,CAAC;AACVyB,MAAAA,IAAI,EAAE/C,YADI;AAEVgD,MAAAA,IAAI,EAAE,CAAC,OAAD,EAAU,CAAC,QAAD,CAAV;AAFI,KAAD,CAJF;AAOPpB,IAAAA,OAAO,EAAE,CAAC;AACVmB,MAAAA,IAAI,EAAE/C,YADI;AAEVgD,MAAAA,IAAI,EAAE,CAAC,OAAD,EAAU,CAAC,QAAD,CAAV;AAFI,KAAD,CAPF;AAUPnB,IAAAA,MAAM,EAAE,CAAC;AACTkB,MAAAA,IAAI,EAAE/C,YADG;AAETgD,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,CAAC,QAAD,CAAT;AAFG,KAAD;AAVD,GAhBvB;AAAA;;AA8BA,MAAMI,mBAAN,CAA0B;;AAE1BA,mBAAmB,CAACX,IAApB;AAAA,mBAAgHW,mBAAhH;AAAA;;AACAA,mBAAmB,CAACC,IAApB,kBAnCgG3D,EAmChG;AAAA,QAAiH0D;AAAjH;AACAA,mBAAmB,CAACE,IAApB,kBApCgG5D,EAoChG;AAAA,YAAgJ,CAACQ,YAAD,CAAhJ;AAAA;;AACA;AAAA,qDArCgGR,EAqChG,mBAA2F0D,mBAA3F,EAA4H,CAAC;AACjHL,IAAAA,IAAI,EAAE9C,QAD2G;AAEjH+C,IAAAA,IAAI,EAAE,CAAC;AACCO,MAAAA,OAAO,EAAE,CAACrD,YAAD,CADV;AAECsD,MAAAA,OAAO,EAAE,CAACpD,aAAD,CAFV;AAGCqD,MAAAA,YAAY,EAAE,CAACrD,aAAD;AAHf,KAAD;AAF2G,GAAD,CAA5H;AAAA;AASA;AACA;AACA;;;AAEA,SAASA,aAAT,EAAwBgD,mBAAxB","sourcesContent":["import * as i0 from '@angular/core';\r\nimport { EventEmitter, Directive, Optional, Input, Output, HostListener, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport * as i1 from '@angular/forms';\r\n\r\nclass InputTextarea {\r\n    constructor(el, ngModel, control, cd) {\r\n        this.el = el;\r\n        this.ngModel = ngModel;\r\n        this.control = control;\r\n        this.cd = cd;\r\n        this.onResize = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        if (this.ngModel) {\r\n            this.ngModelSubscription = this.ngModel.valueChanges.subscribe(() => {\r\n                this.updateState();\r\n            });\r\n        }\r\n        if (this.control) {\r\n            this.ngControlSubscription = this.control.valueChanges.subscribe(() => {\r\n                this.updateState();\r\n            });\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        if (this.autoResize)\r\n            this.resize();\r\n        this.updateFilledState();\r\n        this.cd.detectChanges();\r\n    }\r\n    onInput(e) {\r\n        this.updateState();\r\n    }\r\n    updateFilledState() {\r\n        this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\r\n    }\r\n    onFocus(e) {\r\n        if (this.autoResize) {\r\n            this.resize(e);\r\n        }\r\n    }\r\n    onBlur(e) {\r\n        if (this.autoResize) {\r\n            this.resize(e);\r\n        }\r\n    }\r\n    resize(event) {\r\n        this.el.nativeElement.style.height = 'auto';\r\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\r\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\r\n            this.el.nativeElement.style.overflowY = \"scroll\";\r\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\r\n        }\r\n        else {\r\n            this.el.nativeElement.style.overflow = \"hidden\";\r\n        }\r\n        this.onResize.emit(event || {});\r\n    }\r\n    updateState() {\r\n        this.updateFilledState();\r\n        if (this.autoResize) {\r\n            this.resize();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.ngModelSubscription) {\r\n            this.ngModelSubscription.unsubscribe();\r\n        }\r\n        if (this.ngControlSubscription) {\r\n            this.ngControlSubscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\nInputTextarea.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: InputTextarea, deps: [{ token: i0.ElementRef }, { token: i1.NgModel, optional: true }, { token: i1.NgControl, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nInputTextarea.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: InputTextarea, selector: \"[pInputTextarea]\", inputs: { autoResize: \"autoResize\" }, outputs: { onResize: \"onResize\" }, host: { listeners: { \"input\": \"onInput($event)\", \"focus\": \"onFocus($event)\", \"blur\": \"onBlur($event)\" }, properties: { \"class.p-filled\": \"filled\", \"class.p-inputtextarea-resizable\": \"autoResize\" }, classAttribute: \"p-inputtextarea p-inputtext p-component p-element\" }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: InputTextarea, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[pInputTextarea]',\r\n                    host: {\r\n                        'class': 'p-inputtextarea p-inputtext p-component p-element',\r\n                        '[class.p-filled]': 'filled',\r\n                        '[class.p-inputtextarea-resizable]': 'autoResize'\r\n                    }\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i0.ElementRef }, { type: i1.NgModel, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: i1.NgControl, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: i0.ChangeDetectorRef }];\r\n    }, propDecorators: { autoResize: [{\r\n                type: Input\r\n            }], onResize: [{\r\n                type: Output\r\n            }], onInput: [{\r\n                type: HostListener,\r\n                args: ['input', ['$event']]\r\n            }], onFocus: [{\r\n                type: HostListener,\r\n                args: ['focus', ['$event']]\r\n            }], onBlur: [{\r\n                type: HostListener,\r\n                args: ['blur', ['$event']]\r\n            }] } });\r\nclass InputTextareaModule {\r\n}\r\nInputTextareaModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: InputTextareaModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nInputTextareaModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: InputTextareaModule, declarations: [InputTextarea], imports: [CommonModule], exports: [InputTextarea] });\r\nInputTextareaModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: InputTextareaModule, imports: [[CommonModule]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: InputTextareaModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CommonModule],\r\n                    exports: [InputTextarea],\r\n                    declarations: [InputTextarea]\r\n                }]\r\n        }] });\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { InputTextarea, InputTextareaModule };\r\n\n"]},"metadata":{},"sourceType":"module"}